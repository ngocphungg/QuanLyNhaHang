
package SanPham;

import java.util.List;
import javax.jws.Oneway;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.6-1b01 
 * Generated source version: 2.2
 * 
 */
@WebService(name = "sp_ws", targetNamespace = "http://ws/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface SpWs {


    /**
     * 
     * @param a
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getCheck", targetNamespace = "http://ws/", className = "SanPham.GetCheck")
    @ResponseWrapper(localName = "getCheckResponse", targetNamespace = "http://ws/", className = "SanPham.GetCheckResponse")
    @Action(input = "http://ws/sp_ws/getCheckRequest", output = "http://ws/sp_ws/getCheckResponse")
    public boolean getCheck(
        @WebParam(name = "a", targetNamespace = "")
        String a);

    /**
     * 
     * @return
     *     returns java.util.List<SanPham.Spmodel>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getSanpham", targetNamespace = "http://ws/", className = "SanPham.GetSanpham")
    @ResponseWrapper(localName = "getSanphamResponse", targetNamespace = "http://ws/", className = "SanPham.GetSanphamResponse")
    @Action(input = "http://ws/sp_ws/getSanphamRequest", output = "http://ws/sp_ws/getSanphamResponse")
    public List<Spmodel> getSanpham();

    /**
     * 
     * @param a
     * @return
     *     returns java.util.List<SanPham.Spmodel>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findsp", targetNamespace = "http://ws/", className = "SanPham.Findsp")
    @ResponseWrapper(localName = "findspResponse", targetNamespace = "http://ws/", className = "SanPham.FindspResponse")
    @Action(input = "http://ws/sp_ws/findspRequest", output = "http://ws/sp_ws/findspResponse")
    public List<Spmodel> findsp(
        @WebParam(name = "a", targetNamespace = "")
        String a);

    /**
     * 
     * @param a
     */
    @WebMethod
    @Oneway
    @RequestWrapper(localName = "getDeletesp", targetNamespace = "http://ws/", className = "SanPham.GetDeletesp")
    @Action(input = "http://ws/sp_ws/getDeletesp")
    public void getDeletesp(
        @WebParam(name = "a", targetNamespace = "")
        String a);

    /**
     * 
     * @param a
     * @param b
     * @param c
     * @param d
     * @param e
     * @param f
     * @param g
     */
    @WebMethod
    @Oneway
    @RequestWrapper(localName = "getUpdatesp", targetNamespace = "http://ws/", className = "SanPham.GetUpdatesp")
    @Action(input = "http://ws/sp_ws/getUpdatesp")
    public void getUpdatesp(
        @WebParam(name = "a", targetNamespace = "")
        String a,
        @WebParam(name = "b", targetNamespace = "")
        String b,
        @WebParam(name = "c", targetNamespace = "")
        String c,
        @WebParam(name = "d", targetNamespace = "")
        String d,
        @WebParam(name = "e", targetNamespace = "")
        int e,
        @WebParam(name = "f", targetNamespace = "")
        float f,
        @WebParam(name = "g", targetNamespace = "")
        float g);

    /**
     * 
     * @param a
     * @param b
     * @param c
     * @param d
     * @param e
     * @param f
     * @param g
     */
    @WebMethod
    @Oneway
    @RequestWrapper(localName = "getThemsp", targetNamespace = "http://ws/", className = "SanPham.GetThemsp")
    @Action(input = "http://ws/sp_ws/getThemsp")
    public void getThemsp(
        @WebParam(name = "a", targetNamespace = "")
        String a,
        @WebParam(name = "b", targetNamespace = "")
        String b,
        @WebParam(name = "c", targetNamespace = "")
        String c,
        @WebParam(name = "d", targetNamespace = "")
        String d,
        @WebParam(name = "e", targetNamespace = "")
        int e,
        @WebParam(name = "f", targetNamespace = "")
        float f,
        @WebParam(name = "g", targetNamespace = "")
        float g);

}
