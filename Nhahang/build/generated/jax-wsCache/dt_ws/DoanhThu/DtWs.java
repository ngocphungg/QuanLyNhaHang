
package DoanhThu;

import java.util.List;
import javax.jws.Oneway;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.6-1b01 
 * Generated source version: 2.2
 * 
 */
@WebService(name = "dt_ws", targetNamespace = "http://ws/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface DtWs {


    /**
     * 
     * @param month
     * @param year
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "checkDoanhThuExist", targetNamespace = "http://ws/", className = "DoanhThu.CheckDoanhThuExist")
    @ResponseWrapper(localName = "checkDoanhThuExistResponse", targetNamespace = "http://ws/", className = "DoanhThu.CheckDoanhThuExistResponse")
    @Action(input = "http://ws/dt_ws/checkDoanhThuExistRequest", output = "http://ws/dt_ws/checkDoanhThuExistResponse")
    public boolean checkDoanhThuExist(
        @WebParam(name = "year", targetNamespace = "")
        int year,
        @WebParam(name = "month", targetNamespace = "")
        int month);

    /**
     * 
     * @return
     *     returns java.util.List<DoanhThu.Dtmodel>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getdoanhthu", targetNamespace = "http://ws/", className = "DoanhThu.Getdoanhthu")
    @ResponseWrapper(localName = "getdoanhthuResponse", targetNamespace = "http://ws/", className = "DoanhThu.GetdoanhthuResponse")
    @Action(input = "http://ws/dt_ws/getdoanhthuRequest", output = "http://ws/dt_ws/getdoanhthuResponse")
    public List<Dtmodel> getdoanhthu();

    /**
     * 
     * @param month
     * @param year
     * @param tien
     */
    @WebMethod
    @Oneway
    @RequestWrapper(localName = "updateDoanhthu", targetNamespace = "http://ws/", className = "DoanhThu.UpdateDoanhthu")
    @Action(input = "http://ws/dt_ws/updateDoanhthu")
    public void updateDoanhthu(
        @WebParam(name = "year", targetNamespace = "")
        int year,
        @WebParam(name = "month", targetNamespace = "")
        int month,
        @WebParam(name = "tien", targetNamespace = "")
        float tien);

    /**
     * 
     * @param month
     * @param year
     * @param tien
     */
    @WebMethod
    @Oneway
    @RequestWrapper(localName = "insertDoanhthu", targetNamespace = "http://ws/", className = "DoanhThu.InsertDoanhthu")
    @Action(input = "http://ws/dt_ws/insertDoanhthu")
    public void insertDoanhthu(
        @WebParam(name = "year", targetNamespace = "")
        int year,
        @WebParam(name = "month", targetNamespace = "")
        int month,
        @WebParam(name = "tien", targetNamespace = "")
        float tien);

    /**
     * 
     * @return
     *     returns java.util.List<java.lang.String>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "updateComboBox", targetNamespace = "http://ws/", className = "DoanhThu.UpdateComboBox")
    @ResponseWrapper(localName = "updateComboBoxResponse", targetNamespace = "http://ws/", className = "DoanhThu.UpdateComboBoxResponse")
    @Action(input = "http://ws/dt_ws/updateComboBoxRequest", output = "http://ws/dt_ws/updateComboBoxResponse")
    public List<String> updateComboBox();

    /**
     * 
     * @param year
     * @return
     *     returns java.util.List<DoanhThu.Dtmodel>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "fetchData", targetNamespace = "http://ws/", className = "DoanhThu.FetchData")
    @ResponseWrapper(localName = "fetchDataResponse", targetNamespace = "http://ws/", className = "DoanhThu.FetchDataResponse")
    @Action(input = "http://ws/dt_ws/fetchDataRequest", output = "http://ws/dt_ws/fetchDataResponse")
    public List<Dtmodel> fetchData(
        @WebParam(name = "year", targetNamespace = "")
        String year);

}
