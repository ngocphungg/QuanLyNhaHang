
package TaiKhoan;

import java.util.List;
import javax.jws.Oneway;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.6-1b01 
 * Generated source version: 2.2
 * 
 */
@WebService(name = "tk_ws", targetNamespace = "http://ws/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface TkWs {


    /**
     * 
     * @param a
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getCheck", targetNamespace = "http://ws/", className = "TaiKhoan.GetCheck")
    @ResponseWrapper(localName = "getCheckResponse", targetNamespace = "http://ws/", className = "TaiKhoan.GetCheckResponse")
    @Action(input = "http://ws/tk_ws/getCheckRequest", output = "http://ws/tk_ws/getCheckResponse")
    public boolean getCheck(
        @WebParam(name = "a", targetNamespace = "")
        String a);

    /**
     * 
     * @return
     *     returns java.util.List<TaiKhoan.Tkmodel>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getTaikhoan", targetNamespace = "http://ws/", className = "TaiKhoan.GetTaikhoan")
    @ResponseWrapper(localName = "getTaikhoanResponse", targetNamespace = "http://ws/", className = "TaiKhoan.GetTaikhoanResponse")
    @Action(input = "http://ws/tk_ws/getTaikhoanRequest", output = "http://ws/tk_ws/getTaikhoanResponse")
    public List<Tkmodel> getTaikhoan();

    /**
     * 
     * @param a
     * @return
     *     returns java.util.List<TaiKhoan.Tkmodel>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findtk", targetNamespace = "http://ws/", className = "TaiKhoan.Findtk")
    @ResponseWrapper(localName = "findtkResponse", targetNamespace = "http://ws/", className = "TaiKhoan.FindtkResponse")
    @Action(input = "http://ws/tk_ws/findtkRequest", output = "http://ws/tk_ws/findtkResponse")
    public List<Tkmodel> findtk(
        @WebParam(name = "a", targetNamespace = "")
        String a);

    /**
     * 
     * @param a
     * @param b
     * @param c
     * @param d
     */
    @WebMethod
    @Oneway
    @RequestWrapper(localName = "getThemtk", targetNamespace = "http://ws/", className = "TaiKhoan.GetThemtk")
    @Action(input = "http://ws/tk_ws/getThemtk")
    public void getThemtk(
        @WebParam(name = "a", targetNamespace = "")
        String a,
        @WebParam(name = "b", targetNamespace = "")
        String b,
        @WebParam(name = "c", targetNamespace = "")
        String c,
        @WebParam(name = "d", targetNamespace = "")
        String d);

    /**
     * 
     * @param a
     * @param b
     * @param c
     * @param d
     */
    @WebMethod
    @Oneway
    @RequestWrapper(localName = "getUpdatetk", targetNamespace = "http://ws/", className = "TaiKhoan.GetUpdatetk")
    @Action(input = "http://ws/tk_ws/getUpdatetk")
    public void getUpdatetk(
        @WebParam(name = "a", targetNamespace = "")
        String a,
        @WebParam(name = "b", targetNamespace = "")
        String b,
        @WebParam(name = "c", targetNamespace = "")
        String c,
        @WebParam(name = "d", targetNamespace = "")
        String d);

    /**
     * 
     * @param a
     */
    @WebMethod
    @Oneway
    @RequestWrapper(localName = "getDeletetk", targetNamespace = "http://ws/", className = "TaiKhoan.GetDeletetk")
    @Action(input = "http://ws/tk_ws/getDeletetk")
    public void getDeletetk(
        @WebParam(name = "a", targetNamespace = "")
        String a);

}
